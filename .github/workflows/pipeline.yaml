name: Pipeline Backend

on:
  push:
    branches: [ "staging", "production" ]

jobs:
  build:
    name: Build & Publish Backend Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4

      - name: Set IMAGE_TAG
        id: set-tag
        run: |
          SHORT_SHA=$(echo "$GITHUB_SHA" | cut -c1-8)
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV
          echo "IMAGE_TAG=$SHORT_SHA" >> "$GITHUB_OUTPUT"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Cache SBT
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
          restore-keys: ${{ runner.os }}-sbt-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build base image
        run: |
          cd .build
          bash base.sh

      - name: Build & Push Backend Image
        run: |
          mv -f -v .jvmopts.ci .jvmopts
          if [[ "$GITHUB_REF_NAME" == "production" ]]; then
            export APP_ENV=prod
          else
            export APP_ENV=staging
          fi
          sbt docker:publish

  deploy-staging:
    name: Deploy Backend to Staging
    if: github.ref_name == 'staging'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy via Helm to Staging
        run: |
          helm upgrade --install endpoints-staging ./helm \
            --namespace stage \
            --create-namespace \
            --values helm/values.yaml \
            --set image.tag=${{ needs.build.outputs.image_tag }} \
            --set ingress.enabled=true  

  deploy-prod:
    name: Deploy Backend to Production
    if: github.ref_name == 'production'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy via Helm to Production
        run: |
          helm upgrade --install endpoints-prod ./helm \
            --namespace prod \
            --create-namespace \
            --values helm/values-prod.yaml \
            --set image.tag=${{ needs.build.outputs.image_tag }} \
            --set ingress.enabled=true
