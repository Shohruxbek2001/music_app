openapi: 3.1.0
info:
  description: "My music application"
  version: 1.0.0
  title: My music application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Auth
  - name: Users
  - name: Roles
  - name: Settings
  - name: Categories
  - name: Specifications
  - name: Partners
  - name: Assets
  - name: Payments
paths:
  /auth/me:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Auth
      summary: Get current user
      description: "Get current user"
      operationId: getCurrentUser
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthedUser"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Access token
      description: "Login post for authentication"
      operationId: authLogin
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
        description: phone and password for authentication
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokens"
        "422":
          description: Invalid json
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /auth/refresh:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Auth
      summary: Refresh token
      description: "Refresh token"
      operationId: refresh
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokens"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /auth/logout:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Auth
      summary: Logs out current logged in user session
      description: "Logout"
      operationId: logoutUser
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
      responses:
        "204":
          description: Successful operation
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /users:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      summary: Create user
      description: Create user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /users/search:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      summary: Get users by filters
      description: Get users by filters and pagination
      operationId: getUsers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFilters"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - total
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/User"
                  total:
                    type: integer
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /users/{id}:
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      summary: Update user
      description: Update user
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Delete user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /users/{id}/password:
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      summary: Update user password
      description: Update user password
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /roles:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Roles
      summary: Get all roles
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Roles
      summary: Create role
      description: Create role
      operationId: createRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleInput"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /roles/{id}:
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Roles
      summary: Update role
      description: Update role
      operationId: updateRole
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleUpdateInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Roles
      summary: Delete role
      description: Delete role
      operationId: deleteRole
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /roles/privileges:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Roles
      summary: Get all privileges
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PrivilegesMap"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /assets:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Assets
      summary: Create asset
      description: Create asset
      operationId: createAsset
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /payments:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Payments
      summary: Create payment
      description: Create payment
      operationId: createPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInput"
        description: Payment input
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /payments/items/order/{orderId}:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Payments
      summary: Create payment item
      description: Create payment item
      operationId: createPaymentItem
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentItemInput"
        description: Payment item input
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

  /payments/{itemId}/order/{orderId}:
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Payments
      summary: Delete payment item
      description: Delete payment item
      operationId: deletePaymentItem
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Payments
      summary: Update payment item
      description: Update payment item
      operationId: updatePaymentItem
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePaymentItemInput"
        description: Payment item input
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /payments/search:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Payments
      summary: Get payments
      description: Get payments
      operationId: getPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentFilters"
        description: Payment filters
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /specifications:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Create specification
      description: Create specification
      operationId: createSpecification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecificationInput"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /specifications/search:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Get specifications by filters
      description: Get specifications by filters and pagination
      operationId: getSpecifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecificationFilters"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Specification"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /specifications/{id}:
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Update specification
      description: Update specification
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSpecificationInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Delete specification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Delete specification
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /specifications/{specId}/values:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Add specification value
      description: Add specification value
      operationId: addSpecificationValue
      parameters:
        - name: specId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Specification id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecificationValueInput"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /specifications/{specId}/values/{valueId}:
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Delete specification value
      description: Delete specification value
      operationId: deleteSpecificationValue
      parameters:
        - name: specId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Specification id
        - name: valueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Specification value id
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Specifications
      summary: Update specification value
      description: Update specification value
      operationId: updateSpecificationValue
      parameters:
        - name: specId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Specification id
        - name: valueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Specification value id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecificationValueInput"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /categories:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Categories
      summary: Get all categories
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Categories
      summary: Create category
      description: Create category
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /categories/{categoryId}:
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Categories
      summary: Update category
      description: Update category
      operationId: updateCategory
      parameters:
        - name: Accept-Language
          in: header
          description: Language
          required: false
          schema:
            type: string
            example: en
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Categories
      summary: Delete category
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Delete category
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /settings:
    get:
      tags:
        - Settings
      security:
        - bearerAuth: [ ]
      summary: Get all settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Setting"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /partners:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Partners
      summary: Create partner
      description: Create partner
      operationId: createPartner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerInput"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectId"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /partners/search:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Partners
      summary: Get partners by filters
      description: Get partners by filters and pagination
      operationId: getPartners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerFilters"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - total
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/Partner"
                  total:
                    type: integer
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /partners/{id}:
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Partners
      summary: Delete partner
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Delete partner
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "401":
          description: Unauthorized - Bearer token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
                  message:
                    type: string
                    example: "Bearer token not found. Please provide a valid Authorization header."
        "403":
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

servers:
  - url: http://localhost:8000
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    #
  schemas:
    ObjectId:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
          example: "Entity successfully created"
    SuccessMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorMessage:
      type: object
      required:
        - message
        - error_code
      properties:
        message:
          type: string
        error_code:
          type: string
    UserCredentials:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
          example: "+998901234567"
        password:
          type: string
          example: "1234"
    AuthTokens:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    AuthedUser:
      type: object
      required:
        - id
        - phone
        - firstname
        - lastname
        - role
      properties:
        id:
          type: string
          format: uuid
        phone:
          type: string
          example: "+998901234567"
        firstname:
          type: string
          example: "Admin"
        lastname:
          type: string
          example: "Admin"
        role:
          $ref: "#/components/schemas/Role"
        marketId:
          type: string
          format: uuid
    Role:
      type: object
      required:
        - id
        - name
        - privileges
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "Admin"
        privileges:
          type: array
          items:
            $ref: "#/components/schemas/Privilege"
    RoleInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Admin"
        privileges:
          type: array
          items:
            $ref: "#/components/schemas/Privilege"
    RoleUpdateInput:
      type: object
      properties:
        name:
          type: string
          example: "Admin"
        privileges:
          type: array
          items:
            $ref: "#/components/schemas/Privilege"
    Privilege:
      type: string
      enum:
        - create_user
        - update_user
        - update_any_user
        - view_users
        - create_super_user
    UserStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - EXPIRED
    UserInput:
      type: object
      required:
        - firstname
        - lastname
        - phone
        - roleId
      properties:
        firstname:
          type: string
          example: "John"
        lastname:
          type: string
          example: "John"
        phone:
          type: string
          example: "+998901234567"
        roleId:
          type: string
          format: uuid
        birthday:
          type: string
          format: date
        address:
          type: string
          example: "123 Main St, New York, NY 10001"
        marketId:
          type: string
          format: uuid
    UpdateUserInput:
      type: object
      properties:
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: John
        phone:
          type: string
          example: +998999673398
        status:
          $ref: '#/components/schemas/UserStatus'
        roleId:
          type: string
          format: uuid
        birthday:
          type: string
          format: date
        address:
          type: string
          example: 123 Main St, New York, NY 10001
        marketId:
          type: string
          format: uuid
    UserFilters:
      type: object
      properties:
        name:
          type: string
          example: John
        phone:
          type: string
          example: +998901234567
        roleId:
          type: string
          format: uuid
          example: 7aa5ba51-5f32-4123-b88c-aca7c8e7b033
        status:
          $ref: "#/components/schemas/UserStatus"
          example: ACTIVE
        limit:
          type: integer
          format: int32
          example: 10
        page:
          type: integer
          format: int32
          example: 1
    User:
      type: object
      required:
        - id
        - name
        - phone
        - role
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "+998901234567"
        role:
          $ref: "#/components/schemas/Role"
        status:
          $ref: "#/components/schemas/UserStatus"
        createdAt:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        birthday:
          type: string
          format: date
          example: "1990-01-01"
        address:
          type: string
          example: "123 Main St, New York, NY 10001, USA"
        marketId:
          type: string
          format: uuid
    CategoryInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Buyumlarni saqlash"
        parentId:
          type: string
          format: uuid
          example: "1f9b4c6c-71e6-4f08-a63b-d8a2d62e5f61"
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "Buyumlarni saqlash"
        parentId:
          type: string
          format: uuid
        subcategories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
    Setting:
      type: object
      properties:
        id:
          type: string
          format: uuid
        costPercentage:
          type: integer
          format: int32
          example: 10
        optimizedPricePercentage:
          type: integer
          format: int32
          example: 10
        salesPricePercentage:
          type: integer
          format: int32
          example: 20
    PartnerInput:
      type: object
      required:
        - fullName
        - phone
        - MarketName
      properties:
        fullName:
          type: string
          example: "Jasur Karimov"
        phone:
          type: string
          example: "+998901234567"
        marketName:
          type: string
          example: "Asila do'koni"
    PartnerFilters:
      type: object
      properties:
        fullName:
          type: string
          example: "Jasur Karimov"
        phone:
          type: string
          example: "+998901234567"
        marketName:
          type: string
          example: "Asila do'koni"
        limit:
          type: integer
          format: int32
          example: 10
        page:
          type: integer
          format: int32
          example: 1
    Specification:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Specification Name
        category:
          $ref: '#/components/schemas/Category'
        values:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationValue'
    SpecificationInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Specification Name
        categoryId:
          type: string
          format: uuid
          example: c7f1c0a0-e0d9-4e1f-a9e5-f7d3b9a3a4b5
    UpdateSpecificationInput:
      type: object
      properties:
        name:
          type: string
          example: Specification Name
        categoryId:
          type: string
          format: uuid
          example: c7f1c0a0-e0d9-4e1f-a9e5-f7d3b9a3a4b5
    SpecificationValue:
      type: object
      required:
        - id
        - value
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
          example: Specification Value
    SpecificationFilters:
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
        uncategorized:
          type: boolean
        limit:
          type: integer
          format: int32
          example: 10
        page:
          type: integer
          format: int32
          example: 10
    SpecificationValueInput:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          example: Specification Value
    ProductSpecificationInput:
      type: object
      required:
        - specId
        - valueId
      properties:
        specId:
          type: string
          format: uuid
        valueId:
          type: string
          format: uuid
    SpecificationDetails:
      type: object
      required:
        - id
        - name
        - valueId
        - value
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Specification Name
        valueId:
          type: string
          format: uuid
        value:
          type: string
          example: Specification Value
    PrivilegesMap:
      type: object
      required:
        - groupName
        - values
      properties:
        groupName:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/Privilege'
    PaymentInput:
      type: object
      required:
        - orderId
      properties:
        marketId:
          type: string
          format: uuid
          example: c7f1c0a0-e0d9-4e1f-a9e5-f7d3b9a3a4b5
        orderId:
          type: string
          format: uuid
          example: c7f1c0a0-e0d9-4e1f-a9e5-f7d3b9a3a4b5
    PaymentFilters:
      type: object
      properties:
        marketId:
          type: string
          format: uuid
          example: c7f1c0a0-e0d9-4e1f-a9e5-f7d3b9a3a4b5
        limit:
          type: integer
          format: int32
          example: 10
        page:
          type: integer
          format: int32
          example: 10
    Payment:
      type: object
      required:
        - id
        - createdAt
        - userId
        - items
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        userId:
          type: string
          format: uuid
        marketId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: "#/components/schemas/PaymentItem"
    PaymentItemInput:
      type: object
      required:
        - amount
        - paymentMethod
      properties:
        amount:
          type: number
          format: double
          example: 10000.0
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        notes:
          type: string
          example: "Payment notes"
    PaymentMethod:
      type: string
      enum:
        - CARD
        - CASH
        - BANK_TRANSFER
        - P2P
    PaymentStatus:
      type: string
      enum:
        - CARD
        - CASH
        - BANK_TRANSFER
        - P2P
    PaymentItem:
      type: object
      required:
        - id
        - createdAt
        - orderId
        - amount
        - paymentMethod
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        orderId:
          type: string
          format: uuid
        amount:
          type: number
          format: double
          example: 10000.0
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        notes:
          type: string
          example: "Payment notes"
    IncomingProductDetails:
      type: object
      required:
        - id
        - productId
        - createdAt
        - name
        - barcode
        - quantity
        - price
        - costPrice
        - wholesalePrice
        - sellPrice
        - arrivalDate
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        name:
          type: string
          example: Product Name
        barcode:
          type: string
          example: 1234567890
        quantity:
          type: integer
          format: int32
          example: 10
        price:
          type: number
          format: double
          example: 10000.0
        costPrice:
          type: number
          format: double
          example: 10000.0
        wholesalePrice:
          type: number
          format: double
          example: 10000.0
        sellPrice:
          type: number
          format: double
          example: 10000.0
        arrivalDate:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        placement:
          type: string
          example: Block B
        supplier:
          $ref: "#/components/schemas/PartnerInfo"
    ProductPrices:
      type: object
      required:
        - price
        - costPrice
        - wholesalePrice
        - sellPrice
      properties:
        price:
          type: number
          format: double
          example: 10000.0
        costPrice:
          type: number
          format: double
          example: 10000.0
        wholesalePrice:
          type: number
          format: double
          example: 10000.0
        sellPrice:
          type: number
          format: double
          example: 10000.0
    UpdatePaymentItemInput:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 10000.0
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        notes:
          type: string
          example: "Payment notes"
    UpdatePasswordInput:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        oldPassword:
          type: string
          example: "oldPassword"
        newPassword:
          type: string
          example: "newPassword"
    IncomingProductUpdateInput:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
          example: 10
        price:
          type: number
          format: double
          example: 10000.0
        placement:
          type: string
          example: Block A
    DisposedProductDetails:
      type: object
      required:
        - id
        - productId
        - name
        - disposalDate
        - quantity
        - user
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        name:
          type: string
          example: Product Name
        incomingProductId:
          type: string
          format: uuid
        marketProductId:
          type: string
          format: uuid
        disposalDate:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        quantity:
          type: integer
          format: int32
          example: 1
        notes:
          type: string
          example: "Sinib qoldi"
        user:
          $ref: "#/components/schemas/UserInfo"
        market:
          $ref: "#/components/schemas/MarketInfo"
    UserInfo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "John Doe"
    PartnerInfo:
      type: object
      required:
        - id
        - fullName
        - phone
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
          example: "Jasur"
        phone:
          type: string
          example: "+998901234567"
